# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * *'  
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
 
    - name: Build with Maven
      run: mvn clean test
      env:
        JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
        JIRA_PASSWORD: ${{ secrets.JIRA_PASSWORD }}
        JIRA_XRAY_CLIENT_ID: ${{ secrets.JIRA_XRAY_CLIENT_ID }}
        JIRA_XRAY_CLIENT_SECRET: ${{ secrets.JIRA_XRAY_CLIENT_SECRET }}
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_XRAY_BASE_URL: ${{ secrets.JIRA_XRAY_BASE_URL }}

    - name: Zip the test results
      if: always()
      run: |
        zip -r test-result.zip test-result/

    - name: Upload test results artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results.zip


    
